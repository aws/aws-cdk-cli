diff --git a/.projenrc.ts b/.projenrc.ts
index 58c5a96..3a22982 100644
--- a/.projenrc.ts
+++ b/.projenrc.ts
@@ -173,7 +173,6 @@ function transitiveFeaturesAndFixes(thisPkg: string, depPkgs: string[]) {
 function transitiveToolkitPackages(thisPkg: string) {
   const toolkitPackages = [
     'aws-cdk',
-    '@aws-cdk/tmp-toolkit-helpers',
     '@aws-cdk/cloud-assembly-schema',
     '@aws-cdk/cloudformation-diff',
     '@aws-cdk/toolkit-lib',
@@ -700,135 +699,6 @@ cdkAssets.eslint?.addRules({ 'jest/no-export': ['off'] });
 
 //////////////////////////////////////////////////////////////////////
 
-const tmpToolkitHelpers = configureProject(
-  new yarn.TypeScriptWorkspace({
-    ...genericCdkProps({
-      private: true,
-    }),
-    parent: repo,
-    name: '@aws-cdk/tmp-toolkit-helpers',
-    description: 'A temporary package to hold code shared between aws-cdk and @aws-cdk/toolkit-lib',
-    devDeps: [
-      '@types/archiver',
-      '@types/semver',
-      'aws-sdk-client-mock',
-      'aws-sdk-client-mock-jest',
-      'fast-check',
-      'nock',
-      '@smithy/util-stream',
-      'xml-js',
-    ],
-    deps: [
-      cloudAssemblySchema.name,
-      cloudFormationDiff,
-      cxApi,
-      `@aws-sdk/client-appsync@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-cloudcontrol@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-cloudformation@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-cloudwatch-logs@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-codebuild@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-ec2@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-ecr@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-ecs@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-elastic-load-balancing-v2@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-iam@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-kms@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-lambda@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-route-53@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-s3@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-secrets-manager@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-sfn@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-ssm@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/client-sts@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/credential-providers@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/lib-storage@${CLI_SDK_V3_RANGE}`,
-      `@aws-sdk/ec2-metadata-service@${CLI_SDK_V3_RANGE}`,
-      '@smithy/middleware-endpoint',
-      '@smithy/node-http-handler',
-      '@smithy/property-provider',
-      '@smithy/shared-ini-file-loader',
-      '@smithy/types',
-      '@smithy/util-retry',
-      '@smithy/util-waiter',
-      cdkAssets,
-      'archiver',
-      'chalk@4',
-      'fs-extra@^9',
-      'glob',
-      'minimatch',
-      'p-limit@^3',
-      'promptly', // @todo remove this should only be in CLI
-      'proxy-agent', // @todo remove this should only be in CLI
-      'semver',
-      'uuid',
-      'wrap-ansi@^7', // Last non-ESM version
-      'yaml@^1',
-    ],
-
-    tsconfig: {
-      compilerOptions: {
-        ...defaultTsOptions,
-        target: 'es2022',
-        lib: ['es2022', 'esnext.disposable', 'dom'],
-        module: 'NodeNext',
-
-        // Temporarily, because it makes it impossible for us to use @internal functions
-        // from other packages. Annoyingly, VSCode won't show an error if you use @internal
-        // because it looks at the .ts, but the compilation will fail because it will use
-        // the .d.ts.
-        stripInternal: false,
-      },
-    },
-
-    jestOptions: jestOptionsForProject({
-      jestConfig: {
-        coverageThreshold: {
-          // We want to improve our test coverage
-          // DO NOT LOWER THESE VALUES!
-          // If you need to break glass, open an issue to re-up the values with additional test coverage
-          statements: 70,
-          branches: 70,
-          functions: 70,
-          lines: 70,
-        },
-        // We have many tests here that commonly time out
-        testTimeout: 30_000,
-        testEnvironment: './test/_helpers/jest-bufferedconsole.ts',
-        setupFilesAfterEnv: ['<rootDir>/test/_helpers/jest-setup-after-env.ts'],
-      },
-    }),
-  }),
-);
-
-new TypecheckTests(tmpToolkitHelpers);
-
-// Prevent imports of private API surface
-tmpToolkitHelpers.package.addField('exports', {
-  '.': './lib/index.js',
-  './package.json': './package.json',
-  './api': './lib/api/index.js',
-  './util': './lib/util/index.js',
-});
-
-tmpToolkitHelpers.eslint?.addRules({
-  '@cdklabs/no-throw-default-error': 'error',
-});
-tmpToolkitHelpers.eslint?.addOverride({
-  files: ['./test/**'],
-  rules: {
-    '@cdklabs/no-throw-default-error': 'off',
-  },
-});
-
-tmpToolkitHelpers.gitignore.addPatterns('test/**/*.map');
-
-tmpToolkitHelpers.npmignore?.addPatterns(
-  '!lib/api/bootstrap/bootstrap-template.yaml',
-);
-tmpToolkitHelpers.postCompileTask.exec('mkdir -p ./lib/api/bootstrap/ && cp ../../aws-cdk/lib/api/bootstrap/bootstrap-template.yaml ./lib/api/bootstrap/');
-
-//////////////////////////////////////////////////////////////////////
-
 const TOOLKIT_LIB_EXCLUDE_PATTERNS = [
   'lib/init-templates/*/typescript/*/*.template.ts',
 ];
@@ -909,7 +779,6 @@ const toolkitLib = configureProject(
       '@smithy/types',
       '@types/fs-extra',
       '@types/split2',
-      tmpToolkitHelpers,
       'aws-cdk-lib',
       'aws-sdk-client-mock',
       'aws-sdk-client-mock-jest',
@@ -1016,13 +885,6 @@ new pj.JsonFile(toolkitLib, 'api-extractor.json', {
 // Eslint rules
 toolkitLib.eslint?.addRules({
   '@cdklabs/no-throw-default-error': 'error',
-  'import/no-restricted-paths': ['error', {
-    zones: [{
-      target: './',
-      from: '../tmp-toolkit-helpers',
-      message: 'All `@aws-cdk/tmp-toolkit-helpers` code must be used via lib/api/shared-*.ts',
-    }],
-  }],
 });
 toolkitLib.eslint?.addOverride({
   files: ['./test/**'],
@@ -1137,7 +999,6 @@ const cli = configureProject(
       nodeBundle,
       yargsGen,
       cliPluginContract,
-      tmpToolkitHelpers,
       toolkitLib,
       '@octokit/rest',
       '@types/archiver',
